{"version":3,"sources":["Components/Title.js","Components/TodoForm.js","Components/Todo.js","Components/TodoList.js","App.js","serviceWorker.js","index.js"],"names":["Title","react_default","a","createElement","this","props","title","Component","TodoForm","inputRef","React","createRef","_this2","type","ref","placeholder","value","onChange","e","item","onClick","current","btnText","Todo","_this","isEditing","TodoForm_TodoForm","onChangeEdit","editItem","style","display","name","checked","isCompleted","toggleChecked","marginLeft","deleteItem","TodoList","todos","map","cur","Todo_Todo","key","id","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","todoInput","target","onSubmit","updatedTodos","update","state","$push","shortid","generate","itemPos","findIndex","defineProperty","$set","getCompletedItems","filter","isSingular","length","$splice","completedItems","Title_Title","text","TodoList_TodoList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cbfd2b22.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Title extends Component {\n  render() {\n    return <div>{this.props.title}</div>;\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class TodoForm extends Component {\n  inputRef = React.createRef();\n  render() {\n    return (\n      <div>\n        <input\n          type=\"text\"\n          ref={this.inputRef}\n          placeholder=\"Todo\"\n          value={this.props.value}\n          onChange={e => this.props.onChange(e, this.props.item)}\n        />\n        <button\n          onClick={() => {\n            this.props.onClick();\n            this.inputRef.current.value = \"\";\n          }}\n        >\n          {this.props.btnText}\n        </button>\n        <br />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TodoForm from \"./TodoForm\";\n\nexport default class Todo extends Component {\n  render() {\n    if (this.props.item.isEditing) {\n      return (\n        <TodoForm\n          item={this.props.item}\n          onChange={this.props.onChangeEdit}\n          onClick={() => this.props.editItem(this.props.item)}\n          value={this.props.item.title}\n          btnText={\"Edit todo\"}\n        />\n      );\n    }\n    return (\n      <div style={{ display: \"flex\" }}>\n        <input\n          type=\"checkbox\"\n          name={this.props.item.title}\n          checked={this.props.item.isCompleted}\n          value={this.props.item.title}\n          onChange={() => this.props.toggleChecked(this.props.item)}\n        />\n        {this.props.item.title}\n        <span\n          style={{ marginLeft: 15 }}\n          onClick={() => this.props.editItem(this.props.item)}\n        >\n          Edit\n        </span>\n        <span\n          style={{ marginLeft: 15 }}\n          onClick={() => this.props.deleteItem(this.props.item)}\n        >\n          Delete\n        </span>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Todo from \"./Todo\";\n\nexport default class TodoList extends Component {\n  render() {\n    return (\n      <div>\n        {this.props.todos.map(cur => {\n          return (\n            <Todo\n              key={cur.id}\n              item={cur}\n              toggleChecked={this.props.toggleChecked}\n              deleteItem={this.props.deleteItem}\n              editItem={this.props.editItem}\n              onChangeEdit={this.props.onChangeEdit}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Title from \"./Components/Title\";\nimport TodoForm from \"./Components/TodoForm\";\nimport TodoList from \"./Components/TodoList\";\nimport update from \"immutability-helper\";\nimport shortid from \"shortid\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoInput: \"\",\n      completedItems: [],\n      todos: [\n        {\n          id: shortid.generate(),\n          title: \"Learn Js\",\n          isCompleted: false,\n          isEditing: false\n        },\n        {\n          id: shortid.generate(),\n          title: \"Learn HTML\",\n          isCompleted: false,\n          isEditing: false\n        },\n        {\n          id: shortid.generate(),\n          title: \"Learn React\",\n          isCompleted: false,\n          isEditing: false\n        }\n      ]\n    };\n  }\n\n  onChange = e => {\n    this.setState({ todoInput: e.target.value });\n  };\n\n  onSubmit = () => {\n    const updatedTodos = update(this.state.todos, {\n      $push: [\n        {\n          id: shortid.generate(),\n          title: this.state.todoInput,\n          isCompleted: false\n        }\n      ]\n    });\n\n    this.setState({\n      todoInput: \"\",\n      todos: updatedTodos\n    });\n  };\n\n  toggleChecked = item => {\n    const itemPos = this.state.todos.findIndex(cur => cur.id === item.id);\n    const updatedTodos = update(this.state.todos, {\n      [itemPos]: {\n        isCompleted: { $set: !this.state.todos[itemPos].isCompleted }\n      }\n    });\n    this.setState({ todos: updatedTodos });\n  };\n\n  getCompletedItems = () => {\n    return this.state.todos.filter(cur => cur.isCompleted === true);\n  };\n\n  editItem = item => {\n    const itemPos = this.state.todos.findIndex(cur => cur.id === item.id);\n    const updatedTodos = update(this.state.todos, {\n      [itemPos]: {\n        isEditing: { $set: !this.state.todos[itemPos].isEditing }\n      }\n    });\n    this.setState({ todos: updatedTodos });\n  };\n\n  isSingular = () => this.getCompletedItems().length === 1;\n\n  deleteItem = item => {\n    const itemPos = this.state.todos.findIndex(cur => cur.id === item.id);\n    const updatedTodos = update(this.state.todos, {\n      $splice: [[itemPos, 1]]\n    });\n    this.setState({ todos: updatedTodos });\n  };\n\n  onChangeEdit = (e, item) => {\n    const itemPos = this.state.todos.findIndex(cur => cur.id === item.id);\n    const updatedTodos = update(this.state.todos, {\n      [itemPos]: {\n        title: { $set: e.target.value }\n      }\n    });\n    this.setState({ todos: updatedTodos });\n  };\n\n  render() {\n    return (\n      <div>\n        <Title text={\"Todos\"} />\n        <TodoForm\n          onChange={this.onChange}\n          onClick={this.onSubmit}\n          value={this.props.todoInput}\n          btnText={\"Add todo\"}\n        />\n        <TodoList\n          todos={this.state.todos}\n          toggleChecked={this.toggleChecked}\n          deleteItem={this.deleteItem}\n          editItem={this.editItem}\n          onChangeEdit={this.onChangeEdit}\n        />\n        <p>\n          {this.getCompletedItems().length}\n          {this.isSingular() ? \" is completed\" : \" are completed\"}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}